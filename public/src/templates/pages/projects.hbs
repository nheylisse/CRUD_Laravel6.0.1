{{!-- blank.hbs --}}
{{#> layout title=pageTitle parentPage='app-views' firstLevelChild='projects'}}
	{{#*inline "sa-page-content"}}
		<div class="d-flex w-100 home-header">
			<div>
				<h1 class="page-header"><i class="fa-fw fa fa-puzzle-piece"></i> App Views <span>> Project</span></h1>				
			</div>
			<div class="ml-auto">
				<ul class="sa-sparks">
					<li class="sparks-info">
						<h5> <small>My Income</small> <span class="text-blue">$47,171</span></h5>
						<div class="sparkline text-blue d-none d-xl-block">
							1300, 1877, 2500, 2577, 2000, 2100, 3000, 2700, 3631, 2471, 2700, 3631, 2471
						</div>
					</li>
					<li class="sparks-info">
						<h5> <small>Site Traffic</small> <span class="text-purple"><i class="fa fa-arrow-circle-up" data-rel="bootstrap-tooltip" title="Increased"></i>&nbsp;45%</span></h5>
						<div class="sparkline text-purple d-none d-xl-block">
							110,150,300,130,400,240,220,310,220,300, 270, 210
						</div>
					</li>
					<li class="sparks-info">
						<h5> <small>Site Orders</small> <span class="text-green-dark"><i class="fa fa-shopping-cart"></i>&nbsp;2447</span></h5>
						<div class="sparkline text-green-dark d-none d-xl-block">
							110,150,300,130,400,240,220,310,220,300, 270, 210
						</div>
					</li>
				</ul>				
			</div>
		</div>
		<div class="w-100">
			<div class="row">
						
				<!-- NEW WIDGET START -->
				<article class="col-sm-12 col-md-12 col-lg-12">
					
					<div class="alert alert-info">
						<strong>NOTE:</strong> All the data is loaded from a seperate JSON file
					</div>

					<div class="jarviswidget well no-padding" id="wid-id-0">
						<!-- widget options:
							usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">
							
							data-widget-colorbutton="false"	
							data-widget-editbutton="false"
							data-widget-togglebutton="false"
							data-widget-deletebutton="false"
							data-widget-fullscreenbutton="false"
							data-widget-custombutton="false"
							data-widget-collapsed="true" 
							data-widget-sortable="false"
							
						-->
						<header>
							<div class="widget-header">
								<span class="widget-icon"> <i class="fa fa-comments"></i> </span>
								<h2>Widget Title </h2>
							</div>							
						</header>

						<!-- widget div-->
						<div>
							
							<!-- widget edit box -->
							<div class="jarviswidget-editbox">
								<!-- This area used as dropdown edit box -->
								<input class="form-control" type="text">	
							</div>
							<!-- end widget edit box -->
							
							<!-- widget content -->
							<div class="widget-body p-0">
								
								<table id="example" class="display projects-table table table-striped table-bordered table-hover" cellspacing="0" width="100%">
							        <thead>
							            <tr>
							                <th></th><th>Projects</th><th><i class="fa fa-fw fa-user text-muted hidden-md hidden-sm hidden-xs"></i> EST</th>
							                <th>Contacts</th>
							                <th>Status</th>
							                <th><i class="fa fa-circle text-darken font-xs"></i> Target/ <i class="fa fa-circle text-danger font-xs"></i> Actual</th>
							                <th><i class="fa fa-fw fa-calendar text-muted hidden-md hidden-sm hidden-xs"></i> Starts</th>
							                <th><i class="fa fa-fw fa-calendar text-muted hidden-md hidden-sm hidden-xs"></i> Ends</th>
							                <th>Tracker</th>
							            </tr>
							        </thead>
							    </table>

							</div>
							<!-- end widget content -->
							
						</div>
						<!-- end widget div -->
						
					</div>
					<!-- end widget -->

				</article>
				<!-- WIDGET END -->
				
			</div>
		</div>
	{{/inline}}
	{{#*inline "script-block"}} 
	<script type="text/javascript">
	/* Formatting function for row details - modify as you need */
				function format ( d ) {
				    // `d` is the original data object for the row
				    return '<table cellpadding="5" cellspacing="0" border="0" class="table m-0 table-condensed">'+
				        '<tr>'+
				            '<td style="width:100px">Project Title:</td>'+
				            '<td>'+d.name+'</td>'+
				        '</tr>'+
				        '<tr>'+
				            '<td>Deadline:</td>'+
				            '<td>'+d.ends+'</td>'+
				        '</tr>'+
				        '<tr>'+
				            '<td>Extra info:</td>'+
				            '<td>And any further details here (images etc)...</td>'+
				        '</tr>'+
				        '<tr>'+
				            '<td>Comments:</td>'+
				            '<td>'+d.comments+'</td>'+
				        '</tr>'+
				        '<tr>'+
				            '<td>Action:</td>'+
				            '<td>'+d.action+'</td>'+
				        '</tr>'+
				    '</table>';
				}

				// clears the variable if left blank
			    var table = $('#example').DataTable( {
			    	"sDom": "<'dt-toolbar d-flex'<f><'ml-auto hidden-xs show-control'l>r>"+
						"t"+
						"<'dt-toolbar-footer d-flex'<'hidden-xs'i><'ml-auto'p>>",
			        "ajax": "data/dataList.json",
			        "bDestroy": true,
			        "iDisplayLength": 15,
			        "oLanguage": {
					    "sSearch": '<span class="input-group-addon"><i class="fa fa-search"></i></span>'
					},
					"classes": {
						"sWrapper":      "dataTables_wrapper dt-bootstrap4"
					},
			        "columns": [
			            {
			                "class":          'details-control',
			                "orderable":      false,
			                "data":           null,
			                "defaultContent": ''
			            },
			            { "data": "name" },
			            { "data": "est" },
			            { "data": "contacts" },
			            { "data": "status" },
			            { "data": "target-actual" },
			            { "data": "starts" },
			            { "data": "ends" },
			            { "data": "tracker" },
			        ],
			        "order": [[1, 'asc']],
			        "fnDrawCallback": function( oSettings ) {
				       runAllCharts();
				       console.log(1);
				    }
			    } );


			     
			    // Add event listener for opening and closing details
			    $('#example tbody').on('click', 'td.details-control', function () {
			        var tr = $(this).closest('tr');
			        var row = table.row( tr );
			 
			        if ( row.child.isShown() ) {
			            // This row is already open - close it
			            row.child.hide();
			            tr.removeClass('shown');
			        }
			        else {
			            // Open this row
			            row.child( format(row.data()) ).show();
			            tr.addClass('shown');
			        }
			    });
		</script>	
	{{/inline}}
{{/layout}}
